tto             lda     txtptr                          
                ldy     txtptr+1                        
                sta     oldtxt                          
                sty     oldtxt+1                        
xeqrts          rts                                     


; Set up for command processing and set processor address on stack.
; Exit via jmp to CHRGET

xeqcm3          beq     xeqrts                          ; nothing here...null statement
                bbr5    runmod,xeqcm2                   ; trcflg. branch if trace not enabled
                bbr7    runmod,xeqcm2                   ; branch if direct mode- can't trace

                pha                                     ; save token
                lda     #'['                            ; print '[line-number]'
                jsr     outch                           ; outdo
                jsr     curprt                          ; print curlin
                lda     #']'                            
                jsr     outch                           ; outdo
                pla                                     ; restore token


xeqcm2          cmp     #esc_command_token              ; special case: escape token
                beq     xeqesc                          
                cmp     #go_token                       ; special case: go to
                +lbeq   go_without_to                   
                cmp     #mid_token                      ; special case: mid$()=
                beq     xeqmid                          

; Command can be in the range END...NEW (old BASIC) & ELSE...MONITOR
; (new extensions).  Although there is a gap between these two blocks,
; it will be quickest & easiest to collapse them into one continuous block.

                cmp     #monitor_token+1                
                bcs     snerr1                          
                cmp     #new_token+1                    
                bcc     xeqcm4                          ; no need to collapse
                cmp     #else_token                     
                bcc     snerr1                          
                sbc     #else_token-new_token-1         

xeqcm4          sec                                     ; convert adjusted token into an index into a jump table.
                sbc     #end_token                      
                +lbcc   let                             ; it wasn't a token after all!  assume an assignment

xeqcm5          asl                                     ; *2 to convert into word pointer
                tay                                     
                bcs     l14_1                           ; dispatch table 1 or 2?     [901212]
                lda     stmdsp+1,y                      ; one
                pha                                     
                lda     stmdsp,y                        
                bra     l14_2                           

l14_1           lda     stmdsp2+1,y                     ; two      [901212]
                pha                                     
                lda     stmdsp2,y                       

l14_2           pha                                     
                jmp     chrget                          ; execution will commence after chrget's RTS



