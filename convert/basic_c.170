zerofc          lda #0                                  ; not needed by NORMAL, but by others
zerof1          sta facexp                              ; number must be zero
zeroml          sta facsgn                              ; make sign positive
zerrts          rts                                     ; all done


fadd2           adc oldov                               
                sta facov                               
                lda faclo                               
                adc arglo                               
                sta faclo                               
                lda facmo                               
                adc argmo                               
                sta facmo                               
                lda facmoh                              
                adc argmoh                              
                sta facmoh                              
                lda facho                               
                adc argho                               
                sta facho                               
                bra squeez                              ; go round if signs same


norm2           adc #1                                  ; decrement shift counter
                asl facov                               ; shift all left one bit
                rol faclo                               
                rol facmo                               
                rol facmoh                              
                rol facho                               

norm1           bpl norm2                               ; if msb=0 shift again
                sec                                     
                sbc facexp                              
                bcs zerofc                              
                eor #$ff                                
                adc #1                                  ; complement
                sta facexp                              

squeez          bcc rndrts                              ; bits to shift?
rndshf          inc facexp                              
                +lbeq overr                             
                ror facho                               
                ror facmoh                              
                ror facmo                               
                ror faclo                               
                ror facov                               
rndrts          rts                                     ; all done adding


negfac          lda facsgn                              
                eor #$ff                                ; complement FAC entirely
                sta facsgn                              

negfch          lda facho                               
                eor #$ff                                ; complement just the number
                sta facho                               
                lda facmoh                              
                eor #$ff                                
                sta facmoh                              
                lda facmo                               
                eor #$ff                                
                sta facmo                               
                lda faclo                               
                eor #$ff                                
                sta faclo                               
                lda facov                               
                eor #$ff                                
                sta facov                               
                inc facov                               
                bne incfrt                              

incfac          inc faclo                               
                bne incfrt                              
                inc facmo                               
                bne incfrt                              ; if no carry, return
                inc facmoh                              
                bne incfrt                              
                inc facho                               ; carry complement
incfrt          rts                                     


; SHIFTR shifts (x+1:x+3) (-a) bits right.  Shifts bits to start with
; if possible.

mulshf          ldx #resho-1                            ; entry point for multiplier
shftr2          ldy 4,x                                 ; shift bits first
                sty facov                               
                ldy 3,x                                 
                sty 4,x                                 
                ldy 2,x                                 ; get mo
                sty 3,x                                 ; store lo
                ldy 1,x                                 ; get ho
                sty 2,x                                 ; store mo
                ldy bits                                
                sty 1,x                                 ; store ho

shiftr          adc #8                                  
                bmi shftr2                              
                beq shftr2                              
                sbc #8                                  ; c can be either 1,0 and it works!
                tay                                     
                lda facov                               
                bcs shftrt                              ; equiv to beq here

shftr3          asl 1,x                                 
                bcc l170_1                              
                inc 1,x                                 
l170_1          ror 1,x                                 
                ror 1,x                                 ; yes, two of them

