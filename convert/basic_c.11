keyword_list                                              
                 !text "EN",'D'+$80                       ; $80
                 !text "FO",'R'+$80                       ; $81
                 !text "NEX",'T'+$80                      ; $82
                 !text "DAT",'A'+$80                      ; $83
                 !text "INPUT",'#'+$80                    ; $84
                 !text "INPU",'T'+$80                     ; $85
                 !text "DI",'M'+$80                       ; $86
                 !text "REA",'D'+$80                      ; $87
                 !text "LE",'T'+$80                       ; $88
                 !text "GOT",'O'+$80                      ; $89
                 !text "RU",'N'+$80                       ; $8A
                 !text "I",'F'+$80                        ; $8B
                 !text "RESTOR",'E'+$80                   ; $8C
                 !text "GOSU",'B'+$80                     ; $8D
                 !text "RETUR",'N'+$80                    ; $8E
                 !text "RE",'M'+$80                       ; $8F
                 !text "STO",'P'+$80                      ; $90
                 !text "O",'N'+$80                        ; $91
                 !text "WAI",'T'+$80                      ; $92
                 !text "LOA",'D'+$80                      ; $93
                 !text "SAV",'E'+$80                      ; $94
                 !text "VERIF",'Y'+$80                    ; $95
                 !text "DE",'F'+$80                       ; $96
                 !text "POK",'E'+$80                      ; $97
                 !text "PRINT",'#'+$80                    ; $98
                 !text "PRIN",'T'+$80                     ; $99
                 !text "CON",'T'+$80                      ; $9A
                 !text "LIS",'T'+$80                      ; $9B
                 !text "CL",'R'+$80                       ; $9C
                 !text "CM",'D'+$80                       ; $9D
                 !text "SY",'S'+$80                       ; $9E
                 !text "OPE",'N'+$80                      ; $9F
                 !text "CLOS",'E'+$80                     ; $A0
                 !text "GE",'T'+$80                       ; $A1
                 !text "NE",'W'+$80                       ; $A2
                 !text "TAB",'('+$80                      ; $A3
                 !text "T",'O'+$80                        ; $A4
                 !text "F",'N'+$80                        ; $A5
                 !text "SPC",'('+$80                      ; $A6
                 !text "THE",'N'+$80                      ; $A7
                 !text "NO",'T'+$80                       ; $A8
                 !text "STE",'P'+$80                      ; $A9
                 !text '+'+$80                            ; $AA operators
                 !text '-'+$80                            ; $AB
                 !text '*'+$80                            ; $AC
                 !text '/'+$80                            ; $AD
                 !text '^'+$80                            ; $AE
                 !text "AN",'D'+$80                       ; $AF
                 !text "O",'R'+$80                        ; $B0
                 !text '>'+$80                            ; $B1
                 !text '='+$80                            ; $B2
                 !text '<'+$80                            ; $B3
                 !text "SG",'N'+$80                       ; $B4 first numeric function
                 !text "IN",'T'+$80                       ; $B5
                 !text "AB",'S'+$80                       ; $B6
                 !text "US",'R'+$80                       ; $B7
                 !text "FR",'E'+$80                       ; $B8
                 !text "PO",'S'+$80                       ; $B9
                 !text "SQ",'R'+$80                       ; $BA
                 !text "RN",'D'+$80                       ; $BB
                 !text "LO",'G'+$80                       ; $BC
                 !text "EX",'P'+$80                       ; $BD
                 !text "CO",'S'+$80                       ; $BE
                 !text "SI",'N'+$80                       ; $BF
                 !text "TA",'N'+$80                       ; $C0
                 !text "AT",'N'+$80                       ; $C1
                 !text "PEE",'K'+$80                      ; $C2
                 !text "LE",'N'+$80                       ; $C3
                 !text "STR",'$'+$80                      ; $C4
                 !text "VA",'L'+$80                       ; $C5
                 !text "AS",'C'+$80                       ; $C6 last numeric function
                 !text "CHR",'$'+$80                      ; $C7 last single-arg function
                 !text "LEFT",'$'+$80                     ; $C8
                 !text "RIGHT",'$'+$80                    ; $C9
                 !text "MID",'$'+$80                      ; $CA
                 !text "G",'O'+$80                        ; $CB
; beginning of new C128 keywords------------
                 !text "RGRAPHI",'C'+$80                  ; $CC was 'rgr'   [910701]
                 !text "RCOLO",'R'+$80                    ; $CD was 'rclr'   [910701]
                 !text $80                                ; $CE null to skip over escape_function token
                 !text "JO",'Y'+$80                       ; $CF
                 !text "RPE",'N'+$80                      ; $D0 (was rdot in c128)
                 !text "DE",'C'+$80                       ; $D1
                 !text "HEX",'$'+$80                      ; $D2
                 !text "ERR",'$'+$80                      ; $D3
                 !text "INST",'R'+$80                     ; $D4 last function

                 !text "ELS",'E'+$80                      ; $D5
                 !text "RESUM",'E'+$80                    ; $D6
                 !text "TRA",'P'+$80                      ; $D7
                 !text "TRO",'N'+$80                      ; $D8
                 !text "TROF",'F'+$80                     ; $D9
                 !text "SOUN",'D'+$80                     ; $DA
                 !text "VO",'L'+$80                       ; $DB
                 !text "AUT",'O'+$80                      ; $DC
                 !text "PUDE",'F'+$80                     ; $DD
                 !text "GRAPHI",'C'+$80                   ; $DE
                 !text "PAIN",'T'+$80                     ; $DF
                 !text "CHA",'R'+$80                      ; $E0
                 !text "BO",'X'+$80                       ; $E1
                 !text "CIRCL",'E'+$80                    ; $E2
                 !text "PAST",'E'+$80                     ; $E3 (was gshape in C128)
                 !text "CU",'T'+$80                       ; $E4 (was sshape in C128)
                 !text "LIN",'E'+$80                      ; $E5 (was draw in C128)
                 !text "LOCAT",'E'+$80                    ; $E6
                 !text "COLO",'R'+$80                     ; $E7
                 !text "SCNCL",'R'+$80                    ; $E8
                 !text "SCAL",'E'+$80                     ; $E9
                 !text "HEL",'P'+$80                      ; $EA
                 !text "D",'O'+$80                        ; $EB
                 !text "LOO",'P'+$80                      ; $EC
                 !text "EXI",'T'+$80                      ; $ED
                 !text "DI",'R'+$80                       ; $EE
                 !text "DSAV",'E'+$80                     ; $EF
                 !text "DLOA",'D'+$80                     ; $F0
                 !text "HEADE",'R'+$80                    ; $F1
                 !text "SCRATC",'H'+$80                   ; $F2
                 !text "COLLEC",'T'+$80                   ; $F3
                 !text "COP",'Y'+$80                      ; $F4
                 !text "RENAM",'E'+$80                    ; $F5
                 !text "BACKU",'P'+$80                    ; $F6
                 !text "DELET",'E'+$80                    ; $F7
                 !text "RENUMBE",'R'+$80                  ; $F8
                 !text "KE",'Y'+$80                       ; $F9
                 !text "MONITO",'R'+$80                   ; $FA
                 !text "USIN",'G'+$80                     ; $FB
                 !text "UNTI",'L'+$80                     ; $FC
                 !text "WHIL",'E'+$80                     ; $FD
                 !text 0                                  ; $FE skip over the escape_command token

;.end




;[[tokeniser.keyword.esc]]
; Escape Command Tokens

esc_command_list                                          
                 !text "BAN",'K'+$80                      ; $02: set bank number
                 !text "FILTE",'R'+$80                    ; $03: set up filter
                 !text "PLA",'Y'+$80                      ; $04: play a tune
                 !text "TEMP",'O'+$80                     ; $05: set rate for playing
                 !text "MOVSP",'R'+$80                    ; $06: sprite position/movement
                 !text "SPRIT",'E'+$80                    ; $07: turn on/set up sprite
                 !text "SPRCOLO",'R'+$80                  ; $08: set sprite multicolor registers
                 !text "RRE",'G'+$80                      ; $09: retreive register values after 'SYS'
                 !text "ENVELOP",'E'+$80                  ; $0A: set up SID envelopes
                 !text "SLEE",'P'+$80                     ; $0B: delay
                 !text "CATALO",'G'+$80                   ; $0C: disk directory
                 !text "DOPE",'N'+$80                     ; $0D: open a disk file
                 !text "APPEN",'D'+$80                    ; $0E: open a disk file for appending
                 !text "DCLOS",'E'+$80                    ; $0F: close a file opened w/ DOPEN
                 !text "BSAV",'E'+$80                     ; $10: binary (non-program) save
                 !text "BLOA",'D'+$80                     ; $11: binary load
                 !text "RECOR",'D'+$80                    ; $12:
                 !text "CONCA",'T'+$80                    ; $13: concatenate 2 files
                 !text "DVERIF",'Y'+$80                   ; $14: verify a saved program
                 !text "DCLEA",'R'+$80                    ; $15: re-initialize a drive
                 !text "SPRSA",'V'+$80                    ; $16: sprite/string to sprite/string
                 !text "COLLISIO",'N'+$80                 ; $17: set traps for sprite & light pen collisions
                 !text "BEGI",'N'+$80                     ; $18: mark start of a b-block
                 !text "BEN",'D'+$80                      ; $19: ..and its end, too!
                 !text "WINDO",'W'+$80                    ; $1A: set screen window
                 !text "BOO",'T'+$80                      ; $1B: load&run ML or autoboot a disk
                 !text "WIDT",'H'+$80                     ; $1C: single/double width drawing
                 !text "SPRDE",'F'+$80                    ; $1D: define a sprite
                 !text "QUI",'T'+$80                      ; $1E: (UNIMPLEMENTED)
                 !text "DM",'A'+$80                       ; $1F: access memory
                 !text ' '+$80                            ; $20: POISON - space character
                 !text "DM",'A'+$80                       ; $21: access memory
                 !text ' '+$80                            ; $22: POISON - quote character
                 !text "DM",'A'+$80                       ; $23: access memory
                 !text "OF",'F'+$80                       ; $24: KEY OFF
                 !text "FAS",'T'+$80                      ; $25: go to 2 MHz. mode
                 !text "SLO",'W'+$80                      ; $26: go to 1 MHz. mode
                 !text "TYP",'E'+$80                      ; $27: type SEQ file
                 !text "BVERIF",'Y'+$80                   ; $28: verify a saved program
                 !text "ECTOR",'Y'+$80                    ; $29: dirECTORY
                 !text "ERAS",'E'+$80                     ; $2A: alias for scratch
                 !text "FIN",'D'+$80                      ; $2B: find string
                 !text "CHANG",'E'+$80                    ; $2C: change string
                 !text "SE",'T'+$80                       ; $2D:
                 !text "SCREE",'N'+$80                    ; $2E:
                 !text "POLYGO",'N'+$80                   ; $2F:
                 !text "ELLIPS",'E'+$80                   ; $30:
                 !text "VIEWPOR",'T'+$80                  ; $31:
                 !text "GCOP",'Y'+$80                     ; $32:
                 !text "PE",'N'+$80                       ; $33:
                 !text "PALETT",'E'+$80                   ; $34:
                 !text "DMOD",'E'+$80                     ; $35:
                 !text "DPA",'T'+$80                      ; $36:
                 !text "FORMA",'T'+$80                    ; $37: alias for HEADER command  [911017]
                 !text "GENLOC",'K'+$80                   ; $38:     [910108]
                 !text "FOREGROUN",'D'+$80                ; $39:     [910109]
                 !text ' '+$80                            ; $3A: POISON - colon character  "
                 !text "BACKGROUN",'D'+$80                ; $3B:     "
                 !text "BORDE",'R'+$80                    ; $3C:     "
                 !text "HIGHLIGH",'T'+$80                 ; $3D:     "
                 !text "MOUS",'E'+$80                     ; $3E:     [910122]
                 !text "RMOUS",'E'+$80                    ; $3F: return coordinates of mouse [910123]
                 !text "DIS",'K'+$80                      ; $40:     [910123]
                 !text "CURSO",'R'+$80                    ; $41:     [910228]
                 !text "RCURSO",'R'+$80                   ; $42: return cursor position  [910228]
                 !text "LOADIF",'F'+$80                   ; $43: load IFF picture from disk [910402]
                 !text "SAVEIF",'F'+$80                   ; $44: save IFF picture to   disk [910402]
                 !text "EDI",'T'+$80                      ; $45: Edit mode on/off   [910620]

                 !text 0                                  ; End marker
;(don't forget to change last_command_token!)

; Escape Function Tokens

esc_function_list                                          
                 !text "PO",'T'+$80                       ; $02: return paddle value
                 !text "BUM",'P'+$80                      ; $03: read sprite collision
                 !text "LPE",'N'+$80                      ; $04: read light pen value
                 !text "RSPPO",'S'+$80                    ; $05: read sprite position
                 !text "RSPRIT",'E'+$80                   ; $06: read sprite value
                 !text "RSPCOLO",'R'+$80                  ; $07: read sprite multicolor value
                 !text "XO",'R'+$80                       ; $08: exclusive or
                 !text "RWINDO",'W'+$80                   ; $09: read window size
                 !text "POINTE",'R'+$80                   ; $0a: return address of descriptor
                 !text "MO",'D'+$80                       ; $0b: modulus    [910402]
                 !text "PIXE",'L'+$80                     ; $0c: return BP data at pixel  [910820]
                 !text "RPALETT",'E'+$80                  ; $0d: return RGB component of color [910820]
                 !text 0                                  

;.end
;[[tokeniser.vectors]]


stmdsp                                                    
                 !word end-1                              
                 !word for-1                              
                 !word next-1                             
                 !word data-1                             
                 !word inputn-1                           
                 !word input-1                            
                 !word dim-1                              
                 !word read-1                             
                 !word let-1                              
                 !word goto-1                             
                 !word run-1                              
                 !word if-1                               
                 !word restor-1                           
                 !word gosub-1                            
                 !word return-1                           
                 !word rem-1                              
                 !word stop-1                             
                 !word ongoto-1                           
                 !word wait-1                             
                 !word load-1                             
                 !word save-1                             
                 !word verify-1                           
                 !word def-1                              
                 !word poke-1                             
                 !word printn-1                           
                 !word print-1                            
                 !word cont-1                             
                 !word list-1                             
                 !word clear-1                            
                 !word cmd-1                              
                 !word sys-1                              
                 !word open-1                             
                 !word close-1                            
                 !word get-1                              
                 !word new-1                              

                 !word else-1                             
                 !word resume-1                           
                 !word trap-1                             
                 !word tron-1                             
                 !word troff-1                            
                 !word sound-1                            
                 !word volume-1                           
                 !word auto-1                             
                 !word puctrl-1                           
                 !word graphic-1                          

                 !word C65__paint-1                       
                 !word C65__char-1                        
                 !word C65__box-1                         
                 !word C65__circle-1                      
                 !word C65__paste-1                       ; gshape
                 !word C65__cut-1                         ; sshape
                 !word C65__line-1                        ; draw

                 !word bad_command-1                      ; escape - SYSTEM - unimplemented command
; .word  locate-1

                 !word color-1                            
                 !word scnclr-1                           

                 !word bad_command-1                      ; escape - SYSTEM - unimplemented command
; .word  scale-1

                 !word help-1                             
                 !word do-1                               
                 !word loop-1                             
                 !word exit-1                             
                 !word directory-1                        
                 !word dsave-1                            
                 !word dload-1                            
                 !word header-1                           
                 !word scratch-1                          
                 !word collect-1                          
                 !word dcopy-1                            
                 !word rename-1                           
                 !word backup-1                           
                 !word delete-1                           
                 !word renumber-1                         
                 !word key-1                              
                 !word _monitor-1                         
                 !word bank-1                             ; escape
                 !word filter-1                           ; escape
                 !word play-1                             ; escape
                 !word tempo-1                            ; escape

                 !word movspr-1                           ; escape
                 !word sprite-1                           ; escape
                 !word sprcolor-1                         ; escape

                 !word rreg-1                             ; escape
                 !word envelope-1                         ; escape
                 !word sleep-1                            ; escape
                 !word directory-1                        ; escape
                 !word dopen-1                            ; escape
                 !word append-1                           ; escape
                 !word dclose-1                           ; escape
                 !word bsave-1                            ; escape
                 !word bload-1                            ; escape
                 !word record-1                           ; escape
                 !word concat-1                           ; escape
                 !word dverify-1                          ; escape
                 !word dclear-1                           ; escape

                 !word sprsav-1                           ; escape
                 !word collision-1                        ; escape

                 !word data-1                             ; escape - BEGIN
                 !word data-1                             ; escape - BEND
                 !word window-1                           ; escape
                 !word boot-1                             ; escape

                 !word bad_command-1                      
; .word  set_width-1 ;escape - WIDTH

                 !word bad_command-1                      
; .word  sprdef-1  ;escape - Sprite Definition mode

                 !word bad_command-1                      ; escape - QUIT - unimplemented command
                 !word dma-1                              ; escape
                 !word 0                                  ; placeholder to skip over the space character
                 !word dma-1                              ; escape
                 !word 0                                  ; placeholder to skip over the quote character
                 !word dma-1                              ; escape
                 !word bad_command-1                      ; escape - OFF - unimplemented command
                 !word fast-1                             ; escape
                 !word slow-1                             ; escape
                 !word type-1                             ; escape (C65: type SEQ file)
                 !word bverify-1                          ; escape (C65: verify BINary file)
                 !word snerr-1                            ; escape (C65: kludge- dirECTORY)
                 !word scratch-1                          ; escape (C65: erase alias for scratch)
                 !word find-1                             ; escape (C65: find BASIC text)
                 !word change-1                           ; escape (C65: change BASIC text)

                 !word C65__set-1                         ; escape (C65: multi-purpose command)
                 !word Screen-1                           ; escape (C65: SCREEN)
                 !word C65__polygon-1                     ; escape (C65: POLYGON)
                 !word C65__ellipse-1                     ; escape (C65: ELLIPSE)
                 !word C65__Viewport-1                    ; escape (C65: VIEWPORT)
                 !word C65__copy-1                        ; escape (C65: GCOPY)
                 !word C65__setpen-1                      ; escape (C65: PEN)
                 !word C65__setpalette-1                  ; escape (C65: PALETTE)
                 !word C65__setdmode-1                    ; escape (C65: DMODE)
                 !word C65__setdpat-1                     ; escape (C65: DPAT)
                 !word header-1                           ; format alias for header command [911017]
                 !word genlock-1                          ; [910108]

stmdsp2                                                   
                 !word foreground-1                       ; this is the 128th command!  [910109]
                 !word 0                                  ; placeholder to skip over the colon character
                 !word background-1                       
                 !word border-1                           
                 !word highlight-1                        
                 !word mouse-1                            ; [910122]
                 !word rmouse-1                           ; [910123]
                 !word disk-1                             ; [910123]
                 !word cursor-1                           ; [910228]
                 !word rcursor-1                          ; [910228]
                 !word loadiff-1                          ; [910402]
                 !word saveiff-1                          ; [910930]
                 !word edit-1                             ; [910620]


fundsp                                                    
                 !word sgn                                
                 !word int                                
                 !word abs                                
                 !word usrpok                             
                 !word fre                                
                 !word pos                                
                 !word sqr                                
                 !word rnd                                
                 !word log                                
                 !word exp                                
                 !word cos                                
                 !word sin                                
                 !word tan                                
                 !word atn                                
                 !word peek                               
                 !word len                                
                 !word strd                               
                 !word val                                
                 !word asc                                
                 !word chrd                               
                 !word leftd                              
                 !word rightd                             
                 !word midd                               
                 !word rgraphic                           ; [910701]
                 !word rcolor                             ; [910701]
                 !word 0                                  ; placeholder for escape function token
                 !word joy                                
                 !word rpen                               ; was rdot     [910820]
                 !word dcml                               ; dec
                 !word hexd                               
                 !word errd                               
                 !word pot                                ; escape
                 !word bump                               ; escape
                 !word lpen                               ; escape
                 !word rsppos                             ; escape
                 !word rsprite                            ; escape
                 !word rspcolor                           ; escape
                 !word xor                                ; escape
                 !word rwindow                            ; escape
                 !word pointer                            ; escape
                 !word mod                                ; escape c65     [910402]
                 !word pixel                              ; escape c65     [910820]
                 !word rpalette                           ; escape c65     [910820]


optab            !text 121                                
                 !word faddt-1                            
                 !text 121                                
                 !word fsubt-1                            
                 !text 123                                
                 !word fmultt-1                           
                 !text 123                                
                 !word fdivt-1                            
                 !text 127                                
                 !word fpwrt-1                            
                 !text 80                                 
                 !word andop-1                            
                 !text 70                                 
                 !word orop-1                             
negtab           !text 125                                
                 !word negop-1                            
                 !text 90                                 
                 !word notop-1                            
ptdorl           !text 100                                
                 !word dorel-1                            

;.end

;[[tokeniser.const]]


end_token        = $80                                    ; v2 commands
for_token        = $81                                    
next_token       = $82                                    
data_token       = $83                                    
input_token      = $84                                    
goto_token       = $89                                    
run_token        = $8a                                    
restore_token    = $8c                                    
gosub_token      = $8d                                    
rem_token        = $8f                                    
on_token         = $91                                    
load_token       = $93                                    
save_token       = $94                                    
verify_token     = $95                                    
def_token        = $96                                    
print_token      = $99                                    
clr_token        = $9c                                    
sys_token        = $9e                                    
open_token       = $9f                                    
close_token      = $a0                                    
new_token        = $a2                                    
tab_token        = $a3                                    
to_token         = $a4                                    
fn_token         = $a5                                    
spc_token        = $a6                                    
then_token       = $a7                                    
not_token        = $a8                                    
step_token       = $a9                                    
plus_token       = $aa                                    ; operators
minus_token      = $ab                                    
greater_token    = $b1                                    
equal_token      = $b2                                    
less_token       = $b3                                    
first_function_token = $b4                                    ; v2 functions
left_token       = $c8                                    
mid_token        = $ca                                    
go_token         = $cb                                    ; kludges
rgraphic_token   = $cc                                    ; first new v7 token
esc_function_token = $ce                                    
err_token        = $d3                                    
instr_token      = $d4                                    
last_function_token = $d4                                    
else_token       = $d5                                    
resume_token     = $d6                                    
trap_token       = $d7                                    
color_token      = $e7                                    
do_token         = $eb                                    
loop_token       = $ec                                    
key_token        = $f9                                    
monitor_token    = $fa                                    
using_token      = $fb                                    
until_token      = $fc                                    
while_token      = $fd                                    
esc_command_token = $fe                                    

first_esc_command_token = $02                                    
collision_token  = $17                                    
begin_token      = $18                                    
bend_token       = $19                                    
off_token        = $24                                    
ectory_token     = $29                                    
set_token        = $2d                                    
pic_token        = $37                                    
disk_token       = $40                                    
last_esc_command_token = $45                                    ; <<<< last_command_token

first_esc_function_token = $02                                    
pointer_token    = $0a                                    
last_esc_function_token = $0d                                    ; [910820]


;[[errors]]


ok_error_message                                          
                 !text "O",'K'+$80                        ; 0 for ERR$ [910911]
error_message_list                                          
                 !text "TOO MANY FILE",'S'+$80            ; 1
                 !text "FILE OPE",'N'+$80                 ; 2
                 !text "FILE NOT OPE",'N'+$80             ; 3
                 !text "FILE NOT FOUN",'D'+$80            ; 4
                 !text "DEVICE NOT PRESEN",'T'+$80        ; 5
                 !text "NOT INPUT FIL",'E'+$80            ; 6
                 !text "NOT OUTPUT FIL",'E'+$80           ; 7
                 !text "MISSING FILE NAM",'E'+$80         ; 8
                 !text "ILLEGAL DEVICE NUMBE",'R'+$80     ; 9
                 !text "NEXT WITHOUT FO",'R'+$80          ; 10
                 !text "SYNTA",'X'+$80                    ; 11
                 !text "RETURN WITHOUT GOSU",'B'+$80      ; 12
                 !text "OUT OF DAT",'A'+$80               ; 13
                 !text "ILLEGAL QUANTIT",'Y'+$80          ; 14
                 !text "OVERFLO",'W'+$80                  ; 15
                 !text "OUT OF MEMOR",'Y'+$80             ; 16
                 !text "UNDEF",$27,"D STATEMEN",'T'+$80   ; 17
                 !text "BAD SUBSCRIP",'T'+$80             ; 18
                 !text "REDIM",$27,"D ARRA",'Y'+$80       ; 19
                 !text "DIVISION BY ZER",'O'+$80          ; 20
                 !text "ILLEGAL DIREC",'T'+$80            ; 21
                 !text "TYPE MISMATC",'H'+$80             ; 22
                 !text "STRING TOO LON",'G'+$80           ; 23
                 !text "FILE DAT",'A'+$80                 ; 24
                 !text "FORMULA TOO COMPLE",'X'+$80       ; 25
                 !text "CAN",$27,"T CONTINU",'E'+$80      ; 26
                 !text "UNDEF'D FUNCTIO",'N'+$80          ; 27
                 !text "VERIF",'Y'+$80                    ; 28
                 !text "LOA",'D'+$80                      ; 29
                 !text "BREA",'K'+$80                     ; 30 ???? null & space [910925]
                 !text "CAN'T RESUM",'E'+$80              ; 31
                 !text "LOOP NOT FOUN",'D'+$80            ; 32
                 !text "LOOP WITHOUT D",'O'+$80           ; 33
                 !text "DIRECT MODE ONL",'Y'+$80          ; 34
; .byte 'NO GRAPHICS ARE','A'+$80   ;35
                 !text "SCREEN NOT OPE",'N'+$80           ; 35    [911001]
                 !text "BAD DIS",'K'+$80                  ; 36 ???? used for failed bootsys
                 !text "BEND NOT FOUN",'D'+$80            ; 37
                 !text "LINE NUMBER TOO LARG",'E'+$80     ; 38
                 !text "UNRESOLVED REFERENC",'E'+$80      ; 39
                 !text "UNIMPLEMENTED COMMAN",'D'+$80     ; 40
                 !text "FILE REA",'D'+$80                 ; 41
                 !text "EDIT MOD",'E'+$80                 ; 42    [910620]



;[[errors/constants]]

errtmf           = 1                                      
errfno           = 3                                      
errfnf           = 4                                      
err_missing_fname = 8                                      
err_illegal_device = 9                                      
errnf            = 10                                     
errsn            = 11                                     
errrg            = 12                                     
errod            = 13                                     
errfc            = 14                                     
errov            = 15                                     
errom            = 16                                     
errus            = 17                                     
errbs            = 18                                     
errdd            = 19                                     
errdvo           = 20                                     
errid            = 21                                     
errtm            = 22                                     
errls            = 23                                     
errbd            = 24                                     
errst            = 25                                     
errcn            = 26                                     
erruf            = 27                                     
ervfy            = 28                                     
erload           = 29                                     
erbrk            = 30                                     
errcr            = 31                                     
errlnf           = 32                                     
errlwd           = 33                                     
erroid           = 34                                     
errng            = 35                                     
errbdk           = 36                                     
err_no_bend      = 37                                     
err_too_large    = 38                                     
err_ref          = 39                                     
err_bad_command  = 40                                     
err_file_read    = 41                                     
edit_mode_error  = 42                                     ; [910620]
last_error_message = 42                                     ; # of last error msg

;.end

;[[error.handler]]


; Routine to translate error message # in .a
; into address of string containing message in index2

erstup           tax                                      ; error set up
                 ldy #0                                   ; start with address of first error message
                 lda #<error_message_list                 
                 sta index2                               
                 lda #>error_message_list                 
                 sta index2+1                             

l11_1            dex                                      
                 bmi l11_3                                ; finished when .x decrements out

l11_2            lda (index2),y                           ; look at msg, and find end (msb set) (ind.ok)
                 inw index2                               
                 and #$ff                                 ; was msb set?
                 bpl l11_2                                ; no, not end of message
                 bra l11_1                                ; yes, tick off another msg

l11_3            rts                                      

;.end
;[[dispatcher]]



; Here for new statement. Character -> by txtptr is ':' or eol. The adr of
; this loc is left on the stack when a statement is executed so that it can
; merely do a rts when it is done.
; Get char, exit via xeqcm3, and return to newstt.

