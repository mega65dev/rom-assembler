trap                                                    
; jsr errdir ;why not????      [910925]
                jsr     chrgot                          ; if no #, means 'turn off trap'
                beq     l92_1                           
                jsr     getwrd                          
                sty     trapno                          
                !text $2c                               

l92_1           lda     #$ff                            ; flag no trap
                sta     trapno+1                        
                rts                                     

;.end
;[[command.resume]]




; RESUME command
;
; Used to resume execution following a TRAPped error.
;
; Syntax: RESUME [line_number | NEXT]
;
; Can take the following forms:
;
; RESUME   :resume executing at the statement which caused
;     the error.
; RESUME NEXT  :resume execution at the statement FOLLOWING
;     the statement which caused the error.
; RESUME line_number :resume at the specified line number.


