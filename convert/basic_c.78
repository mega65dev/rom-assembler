iline_10                                                  
                 lda txtptr                               ; save current txtptr
                 sta oldlin                               
                 lda txtptr+1                             
                 sta oldlin+1                             
                 jsr chrget                               
                 bcs chk_quote                            ; not a #...
                 jsr linget                               ; get line # from text
                 jsr form_line                            ; replace if this line # > n3
                 lda oldlin                               ; restore old txtptr
                 sta txtptr                               
                 lda oldlin+1                             
                 sta txtptr+1                             

                 jsr chrget                               ; skip over leading spaces
                 dew txtptr                               ; then backup (txtptr) by 1
                 ldx #$ff                                 
                 lda z_p_temp_1                           ; if this is pass2 then don't actually change
                 beq p3code                               ; if z=1 then pass3 => ok to change
                 jsr p2code                               ; renumber 'pass two': trial run to see if enough room
                 jsr chrgot                               ; re-get last character from BASIC text & rts

iline_20                                                  
                 cmp #','                                 ; comma from 'on'?
                 beq iline_10                             ; it is...
                 bra chk_quote                            ; no...

; .page
;*********** This part of imbed_lines executed in pass 2 only **********

p2code                                                    ; updates text_top without actually changing lines
                 inx                                      
                 lda fbuffr+1,x                           ; get character from number
                 beq _local_1077_20                       ; end of number
                 jsr chrget                               ; get digit from old number
                 bcc p2code                               ; digit...move on

_local_1077_10   inw fndpnt                               
                 sec                                      ; have we run out of memory (theoretically)?
                 lda fndpnt                               ; (compare with limit-of-memory pointer)
                 sbc max_mem_0                            
                 lda fndpnt+1                             
                 sbc max_mem_0+1                          
                 +lbcs omerr                              ; yes- out of memory error
                 inx                                      ; no - next...
                 lda fbuffr+1,x                           
                 bne _local_1077_10                       
_local_1077_15   rts                                      ; no more

_local_1077_20   jsr chrget                               
                 bcs _local_1077_15                       ; old stuff after # is other char
                 dew fndpnt                               ; digit...move down
                 bra _local_1077_20                       ; still digits...

; .page
;*********** This part of imbed_lines executed in pass 3 only **********

