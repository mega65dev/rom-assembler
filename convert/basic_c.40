p1l070                                                    ; found text for this token
                 bbr4 helper,p1l072                       ; branch if not highlighting tokens
                 lda (index1),y                           ; peek at first character
                 bmi p1l010                               ; branch if operator (1-byte, msb=1)
                 smb0 helper                              ; else begin highlight
p1l071           jsr highlight_text                       

p1l072           lda (index1),y                           ; get char from ROM table
                 bmi p1l010                               ; msb=1=last char this token, contine line
                 jsr outch                                ; else print it
                 iny                                      
                 bra p1l072                               

; .page
; Print Escape Command

print_esc_cmd                                             
                 tax                                      ; save type (cmd) in case it is a foreign esc token
                 iny                                      
                 jsr indlow                               ; look at second token
                 +lbeq p1l015                             ; none?  print funny character
                 sty lstpnt                               
                 cmp #first_esc_command_token             ; is this one of ours?
                 bcc print_foreign_esc                    ; nope
                 cmp #last_esc_command_token+1            
                 bcs print_foreign_esc                    ; nope
                 adc #$80-first_esc_command_token         ; yes- make a pointer p1l will be proud of
                 tax                                      
                 ldy #<esc_command_list                   
                 lda #>esc_command_list                   
                 bra p1l026                               ; go scan list and print it



; Print Escape Function

print_esc_fn                                              
                 tax                                      ; save type (function) in case it's a foreign esc token
                 iny                                      
                 jsr indlow                               ; look at second token
                 +lbeq p1l015                             ; none?  print funny character
                 sty lstpnt                               
                 cmp #first_esc_function_token            ; is this one of ours?
                 bcc print_foreign_esc                    ; nope
                 cmp #last_esc_function_token+1           
                 bcs print_foreign_esc                    ; nope
                 adc #$80-first_esc_function_token        ; yes- make a pointer p1l will be proud of
                 tax                                      
                 ldy #<esc_function_list                  
                 lda #>esc_function_list                  
                 bra p1l026                               ; go scan list and print it

; .page
; The token to be printed is an escape token which is NOT recognized by BASIC.
; We will jump through the indirect chain and see if anyone claims this token.
;
; At this point:
; .C = 1 to signal 'unclaimed'
; .X = type (0==>command, ff==>function)
; .A = second token character
;
; If anyone claims this token, they should:
;
; > Clear .C to flag 'taken'
; > Point (INDEX1) at the string to be printed (with msb of last char set)
; > Note: string to print MUST be in RAM-0!

print_foreign_esc                                          
                 cpx #esc_command_token                   
                 bne _local_1039_1                        
                 ldx #0                                   
                 !text $2c                                

_local_1039_1    ldx #$ff                                 
                 sec                                      
                 jmp (iescpr)                             

