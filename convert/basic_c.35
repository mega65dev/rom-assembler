list             rmb7 helper                              ; clear 'help' flag for p1line

; Determine which form of LIST we have...

                 +lbeq list_memory                        ; branch if terminator (no parameter)
                 +lbcc list_memory                        ; branch if a number (assume range parameter)
                 cmp #minus_token                         
                 +lbeq list_memory                        ; branch if a dash (assume range parameter)


; LIST command is of the form  LIST filename [,U#] [,D#]

list_file                                                 
                 lda #$e6                                 ; parse:  filename [,U#] [,D#]
                 jsr dosprs                               ; (like dopen:  0 0 0 *  * 0 0 1 )
                 jsr chk1                                 ; check parameters
                 lda #0                                   
                 sta dossa                                ; setup as dload would (0 = load channel)
                 jsr find_la                              ; find an available la to use (cannot use reserved one)
                 ldy #fopn                                
                 ldx #4                                   
                 jsr open_file                            ; open the file
                 bcs list_err                             ; exit if error

                 ldx dosla                                
                 jsr _chkin                               ; get input channel
                 bcs list_err                             ; exit if bad??
                 jsr _basin                               ; waste 'load address'
                 jsr _basin                               

l35_1            jsr _basin                               ; get link bytes
                 sta dosstr                               
                 jsr _basin                               
                 sta dosstr+1                             
                 ora dosstr                               
                 beq list_exit                            ; done if null pointer
                 jsr _readst                              
                 bne list_exit                            ; done if eof or bad status
; ???? assumes serial bus
                 lda #>dosstr                             ; point p1line's pointer at our line buffer
                 ldx #<dosstr                             
                 sta lowtr+1                              
                 stx lowtr                                

                 ldx #2                                   
                 jsr _basin                               ; read line into buffer
                 sta dosstr,x                             
                 inx                                      
                 jsr _basin                               ; 2-byte line #
                 sta dosstr,x                             
                 inx                                      
l35_2            cpx #255                                 ; check buffer (buflen????)
                 +lbcs errlen                             ; 'too long' error
                 jsr _basin                               
                 sta dosstr,x                             
                 inx                                      
                 tay                                      ; save char
                 jsr _readst                              ; check channel status (serial bus????)
                 bne list_exit                            ; exit if eof or error
                 jsr _stop                                
                 beq list_exit                            ; exit if stop key down
                 tya                                      
                 bne l35_2                                ; loop until eol

                 jsr dcato                                ; get output channel
                 jsr crdo                                 ; start new line
                 ldx dosstr+2                             ; get line #
                 lda dosstr+3                             
                 jsr p1line                               ; print line #, space, and the line of code
                 jsr _clrch                               
                 ldx dosla                                
                 jsr _chkin                               ; get input channel
                 bcc l35_1                                ; [900730]

