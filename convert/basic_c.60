ott              lda oldtxt                                ;; @@39f4 60
                 ldy oldtxt+1                              ;; @@39f7 60
                 sta txtptr                               ; put user back to beginning of input ;; @@39fa 60
                 sty txtptr+1                              ;; @@39fc 60
                 rts                                       ;; @@39fe 60
 ;; @@39ff 60
 ;; @@39ff 60
 ;; @@39ff 60
trmok            ldx #1                                    ;; @@39ff 60
_local_1059_1    lda txtptr,x                              ;; @@3a01 60
                 sta inpptr,x                             ; save for more reads ;; @@3a03 60
                 lda vartxt,x                              ;; @@3a05 60
                 sta txtptr,x                             ; point to variable list ;; @@3a07 60
                 dex                                       ;; @@3a09 60
                 bpl _local_1059_1                         ;; @@3a0a 60
 ;; @@3a0c 60
                 jsr chrgot                               ; look at last vartab character ;; @@3a0c 60
                 beq _local_1059_2                        ; that's the end of the list ;; @@3a0f 60
                 jsr chkcom                               ; not end. check for comma ;; @@3a11 60
                 +lbra inloop                              ;; @@3a14 60
 ;; @@3a17 60
_local_1059_2    lda inpptr                               ; put away a new data pntr name ;; @@3a17 60
                 ldy inpptr+1                              ;; @@3a19 60
                 bbr7 input_flag,_local_1059_3             ;; @@3a1b 60
                 sta datptr                                ;; @@3a1e 60
                 sty datptr+1                              ;; @@3a20 60
                 rts                                       ;; @@3a22 60
 ;; @@3a23 60
_local_1059_3    ldy #0                                   ; last data chr could have been ',' or ':' but should be null ;; @@3a23 60
                 lda #inpptr                               ;; @@3a25 60
                 jsr lda_far_ram0                          ;; @@3a27 60
                 beq _local_1059_4                        ; it is null ;; @@3a2a 60
                 lda channl                               ; if not terminal, no type ;; @@3a2c 60
                 bne _local_1059_4                         ;; @@3a2e 60
 ;; @@3a30 60
                 jsr highlight_text                       ; [911119] ;; @@3a30 60
                 jsr _primm                                ;; @@3a33 60
                 !text "?EXTRA IGNORED", cr,0              ;; @@3a36 60
                 jsr highlight_done                       ; [911119] ;; @@3a46 60
 ;; @@3a49 60
_local_1059_4    rts                                      ; do next statement ;; @@3a49 60
 ;; @@3a4a 60
; .page ;; @@3a4a 60
; DATLOP Routine Subroutine to find data. ;; @@3a4a 60
; ;; @@3a4a 60
; The search is made by using the execution code for data to skip over ;; @@3a4a 60
; statements, the start word of each statement is compared with "data_token". ;; @@3a4a 60
; Each new line number is stored in "datlin" so that if any error occurs while ;; @@3a4a 60
; reading data the error message can give the line number of the bad data. ;; @@3a4a 60
 ;; @@3a4a 60
