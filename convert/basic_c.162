strfre           sta frespc                               
                 sty frespc+1                             
                 ldy #1                                   ; flag string as garbage
                 lda #$ff                                 
                 phx                                      ; set up string bank
                 ldx #index1                              
                 jsr sta_far_ram1 ;sta (index1),y         ; flag
                 plx                                      
                 dey                                      
                 pla                                      ; length
                 phx                                      ; set up string bank
                 ldx #index1                              
                 jsr sta_far_ram1 ;sta (index1),y         ; length
                 plx                                      
                 ldx frespc                               
                 ldy frespc+1                             
                 stx fretop                               
                 sty fretop+1                             ; save new (fretop)
getrts           rts                                      


garbag           lda garbfl                               
                 +lbmi omerr                              ; if out of memory
                 jsr garba2                               
                 sec                                      
                 ror garbfl                               
                 pla                                      ; get back string length
                 bra tryag2                               ; always branches


; .page
; Routine looks for and squashes out any unused string space it finds, thus
; returning the space for future use by the string routines.  GARBA2 is called
; only when BASIC needs space or the FRE() function is used.


garba2           ldx temppt                               ; ptr to temp. strings
_local_1161_10   cpx #tempst                              ; any out there?
                 beq _local_1161_20                       ; none
                 jsr slr1                                 ; setup ptr (tempf2) to temp. string's bkptr
                 beq _local_1161_10                       ; (skip if null string!)
                 txa                                      ; .x = lsb of ptr to descriptor
                 phx                                      ; set up string bank
                 ldx #tempf2                              
                 ldy #0                                   
                 jsr sta_far_ram1 ;(tempf2),y             ; place backpointer on string to temp. descr
                 tya                                      ; .a = msb of ptr (0)
                 iny                                      
                 jsr sta_far_ram1                         ; (tempf2),y
                 plx                                      
                 bra _local_1161_10                       ; always


_local_1161_20   ldy #0                                   ; set up flag
                 sty highds                               
                 ldx max_mem_1                            
                 ldy max_mem_1+1                          
                 stx grbtop                               ; set both pointers
                 stx grbpnt                               
                 stx frespc                               
                 sty grbtop+1                             
                 sty grbpnt+1                             
                 sty frespc+1                             
                 txa                                      

; .page
; do while (grbpnt <= fretop)

