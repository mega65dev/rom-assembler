movspr_irq                                                 ;; @@79d1 253
                 lda vic+21                               ; any sprites active?    [910212] ;; @@79d1 253
                 +lbeq music_irq                          ; no- skip ahead ;; @@79d4 253
 ;; @@79d7 253
                 ldy #7                                   ; check each of 8 sprites ;; @@79d7 253
_local_1252_10   lda vic+21                               ; is this sprite is enabled? ;; @@79d9 253
                 and sbits,y                               ;; @@79dc 253
                 beq _local_1252_40                       ; sprite not enabled ;; @@79df 253
 ;; @@79e1 253
                 ldx sproff,y                             ; get offset to sprite info from a table ;; @@79e1 253
                 lda sprite_data,x                        ; is this sprite moving (speed >0 )? ;; @@79e4 253
                 beq _local_1252_40                       ; sprite not moving ;; @@79e7 253
                 bpl _local_1252_15                       ; sprite moving, no destination ;; @@79e9 253
                 bsr movspr_to_irq                        ; sprite moving to a destination [910809] ;; @@79eb 253
                 bra _local_1252_40                        ;; @@79ee 253
 ;; @@79f0 253
_local_1252_15   sta sprite_data+1,x                      ; set counter ;; @@79f0 253
_local_1252_20   tya                                      ; convert sprite# to a VIC register pointer ;; @@79f3 253
                 asl                                       ;; @@79f4 253
                 tay                                       ;; @@79f5 253
                 lda sprite_data+2,x                      ; get angle sign ;; @@79f6 253
                 dec                                      ; subtract 1 for cosine ;; @@79f9 253
                 inx                                       ;; @@79fa 253
                 inx                                       ;; @@79fb 253
                 iny                                       ;; @@79fc 253
                 jsr sprsub                               ; update y position ;; @@79fd 253
                 dex                                       ;; @@7a00 253
                 dex                                       ;; @@7a01 253
                 dey                                       ;; @@7a02 253
                 lda sprite_data+2,x                       ;; @@7a03 253
                 jsr sprsub                               ; update x position ;; @@7a06 253
                 php                                       ;; @@7a09 253
                 tya                                       ;; @@7a0a 253
                 lsr                                      ; restore index (.Y=sprite pointer) ;; @@7a0b 253
                 tay                                       ;; @@7a0c 253
                 plp                                       ;; @@7a0d 253
                 bcc _local_1252_30                       ; skip if no overflow ;; @@7a0e 253
                 lda vic+16                               ; get x position msb bits ???vic_save ;; @@7a10 253
                 eor sbits,y                              ; invert bit ;; @@7a13 253
                 sta vic+16                               ; ???vic_save ;; @@7a16 253
_local_1252_30   dec sprite_data+1,x                       ;; @@7a19 253
                 bne _local_1252_20                       ; loop until counter done ;; @@7a1c 253
 ;; @@7a1e 253
_local_1252_40   dey                                      ; check next sprite ;; @@7a1e 253
                 bpl _local_1252_10                       ; loop until done moving all sprites ;; @@7a1f 253
                 +lbra music_irq                          ; then continue with next IRQ task ;; @@7a21 253
; .page ;; @@7a24 253
