movspr_normal                                             ; [910122]
                 sty xdest+2                              ; save second coordinate (y,a)
                 sta xdest+3                              
; ldx #xdest-vwork
; jsr scalxy  ;scale the coordinates


movspr_position                                           
                 sei                                      ; [910123]
                 lda z_p_temp_1                           ; get sprite number
                 tax                                      ; use as an index
                 asl                                      
                 tay                                      ; get sprite-number * 2 as another index

                 bbr7 op,l289_1                           
                 rts                                      ; >>>exit here if movspr_to call   [910808]

l289_1           lda xdest+2                              ; get y-coordinate
                 asl numcnt                               ; test if relative
                 bcc l289_3                               ; skip if absolute
                 clc                                      
                 bpl l289_2                               ; skip if normal coordinates
                 eor #$ff                                 
                 sec                                      ; invert to subtract if angular
l289_2           adc vic+1,y                              ; add to current sprite y-value  ???vic_save

l289_3           sta vic+1,y                              ; save new sprite y-position  ???vic_save
                 lda xdest                                ; get low byte of x-coordinate
                 asl numcnt                               ; test if relative
                 bpl l289_5                               ; skip if absolute
                 clc                                      
                 adc vic,y                                ; add current sprite x-position  ???vic_save
                 sta vic,y                                ; save sprite x-position   ???vic_save
                 bcs l289_4                               ; skip if carry
                 inc xdest+1                              ; invert lsb

l289_4           lda vic+16                               ; get x-position msb bits  ???vic_save
                 bra l289_6                               ; test if need to invert msb bit

l289_5           sta vic,y                                ; save new sprite x-position  ???vic_save
                 lda vic+16                               ; ???vic_save
                 ora sbits,x                              ; set x-position msb bit

l289_6           lsr xdest+1                              ; match to lsb of x-coordinate high byte
                 bcs l289_7                               ; skip if should be set
                 eor sbits,x                              ; reset bit

l289_7           sta vic+16                               ; save position msb bits   ???vic_save
; cli
;1l289_1 rts   ; mouse or movspr_to


