sound_irq                                               
                ldy     #6-1                            ; test six voices    [910612]
l257_1          lda     sound_time_hi,y                 ; active if msb clear
                bpl     l257_3                          
l257_2          dey                                     
                bpl     l257_1                          
                +lbra   basic_irq_end                   

l257_3          clc                                     ; add step to frequency
                lda     sound_freq_lo,y                 
                adc     sound_step_lo,y                 
                sta     sound_freq_lo,y                 
                lda     sound_freq_hi,y                 
                adc     sound_step_hi,y                 
                sta     sound_freq_hi,y                 

                lda     sound_direction,y               ; test if this is up or down
                tax                                     
                and     #1                              
                beq     l257_6                          ; branch if up

; If step direction is down, .C==0 OR freq < min  ==> reset value

                bcc     l257_4                          ; underflow, reset
                sec                                     
                lda     sound_freq_lo,y                 
                sbc     sound_min_lo,y                  
                lda     sound_freq_hi,y                 
                sbc     sound_min_hi,y                  
                bcs     l257_9                          ; no borrow, don't reset

l257_4          cpx     #2                              ; is 'cycle' bit set?
                bcc     l257_5                          ; no, keep direction 'down'

                jsr     negate_step                     ; make step 2's comp
                lda     #2                              ; change direction to 'up'
                sta     sound_direction,y               
                bne     l257_8                          ; go reset for 'up'

l257_5          lda     sound_max_lo,y                  ; reset to max
                sta     sound_freq_lo,y                 
                lda     sound_max_hi,y                  
                sta     sound_freq_hi,y                 
                bra     l257_9                          ; go update SID frequency

; If step direction is up, overflow (.C==1) OR freq > max ==> reset frequency

l257_6          bcs     l257_7                          ; overflow, must reset
                lda     sound_freq_hi,y                 ; 16 bit compare (yech!)
                cmp     sound_max_hi,y                  
                bcc     l257_9                          ; freq < max, no reset
                bne     l257_7                          ; freq > max, reset
                lda     sound_freq_lo,y                 ; msb's the same, test lsb's
                cmp     sound_max_lo,y                  
                bcc     l257_9                          ; freq < max, no reset
                beq     l257_9                          ; freq = max, no reset

l257_7          cpx     #2                              ; is this 'cycle'?
                bcc     l257_8                          ; no, go reset for next 'up'

                jsr     negate_step                     ; make step 2's comp
                lda     #3                              ; change direction to 'down'
                sta     sound_direction,y               
                bne     l257_5                          ; go reset for next 'down'

l257_8          lda     sound_min_lo,y                  ; set freq to minimum value
                sta     sound_freq_lo,y                 
                lda     sound_min_hi,y                  
                sta     sound_freq_hi,y                 

; Update SID frequency registers

l257_9                                                  
; jsr go_slow  ;      [910716] 4567R7A
                ldx     SID_offset,y                    ; get index to SID voices
                lda     sound_freq_lo,y                 
                sta     sid1,x                          
                lda     sound_freq_hi,y                 
                sta     sid1+1,x                        
; jsr go_fast  ;      [910716] 4567R7A

; Decrement total time - see if it's time to bring down the curtain

                tya                                     
                tax                                     
                lda     sound_time_lo,x                 ; 16 bit decrement - not very pretty
                bne     l257_10                         
                dec     sound_time_hi,x                 
l257_10         dec     sound_time_lo,x                 

                lda     sound_time_hi,x                 ; underflow?
                +lbpl   l257_2                          ; nope

; Time to turn off this voice

; jsr go_slow  ;      [910716] 4567R7A
                lda     #$08                            
                ldx     SID_offset,y                    
                sta     sid1+4,x                        
; jsr go_fast  ;      [910716] 4567R7A
                +lbra   l257_2                          


