cursor cmp #on_token  ;Check for ON | OFF 
 clc 
 beq 20$   ; turn cursor on (.c=0) 
 cmp #esc_command_token 
 bne 1$   ; (might be a function) 
 jsr chkesc 
 cmp #off_token  ; turn cursor off (.c=1) 
 beq 20$ 
 bra snerr 
 
1$ pha   ;Evaluate cursor position parameters 
 sec 
 jsr _plot  ; get current cursor position & save it 
 stx srow 
 sty column 
 
 ldx column  ; get new column, default=current column 
 pla 
 cmp #',' 
 beq 10$   ;  not given, use default 
 jsr getbyt 
10$ stx column 
 ldx srow   ; get new row, default=current row 
 jsr optbyt 
; stx srow 
 ldy column 
 clc 
 jsr _plot  ; set new cursor position 
 bcs fcerr  ;  error if bad position 
 
 jsr optzer  ;Get new cursor type   ???? assumes screen output 
 bcc 30$   ; not given, exit 
 lda #esc 
 jsr _bsout  ; use escape sequence to set 
 txa 
 and #1 
 eor #1   ;      [910808] 
 clc 
 adc #'E'  ; 0=F=flash, 1=E=solid 
 jmp _bsout  ;set it and exit 
 
20$ jsr _cursor  ;Turn cursor ON or OFF per .c 
 
 jsr chrget  ;eat token, get next character 
 beq 30$   ; eol- exit 
 jsr chkcom  ; else, must be comma 
 bra 1$   ;  it is- go evaluate position 
 
30$ rts   ; eol 
 
 .page 
;************************************************************************ 
;*   RCURSOR Returns in variable list current cursor position * 
;*         * 
;*   Syntax: RCURSOR [column [,row] ]    * 
;************************************************************************ 
 