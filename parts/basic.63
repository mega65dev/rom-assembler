dim3 jsr chkcom ;must be a comma 
 
dim tax  ;make .x non-zero (.a must be non-zero to work correctly) 
 jsr ptrgt1 
 jsr chrgot ;get last character 
 bne dim3 
 rts 
 
;.end 
 .page 
 .subttl SYS 
 
sys jsr getwrd ;convert arg to integer value 
 lda linnum ;set up arg's for call to 'long jsr' 
 sta _pclo 
 lda linnum+1 
 sta _pchi 
 lda current_bank 
 sta _bank 
 
 jsr optbyt ;(optional) .A reg arg 
 bcc 10$ 
 stx _a_reg 
 
10$ jsr optbyt ;(optional) .X reg arg 
 bcc 20$ 
 stx _x_reg 
 
20$ jsr optbyt ;(optional) .Y reg arg 
 bcc 30$ 
 stx _y_reg 
 
25$ jsr optbyt ;(optional) .Z reg arg 
 bcc 30$ 
 stx _z_reg 
 
30$ jsr optbyt ;(optional) .S reg arg 
 bcc 40$ 
 stx _s_reg 
 
40$ jmp _jsr_far ;far, far away 
   ;If returns, Kernel will update _reg's for us 
 
;.end 
 .page 
 .subttl DMA 
 
; DMA - Set up for DMA operation (FETCH/STASH/SWAP) 
; 
;  Syntax:  DMA  command,length,source(l/h/b),destination(l/h/b)[,subcmd,mod(l/h)] [,...] 
 
 