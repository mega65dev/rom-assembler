finlog pha 
 jsr movaf  ;save it for later 
 pla 
 jsr float  ;float the value in (a) 
 
faddt_c65   ;     [910402] 
 lda argsgn 
 eor facsgn 
 sta arisgn  ;resultant sign 
 ldx facexp  ;set signs on thing to add 
 bra faddt  ;add together and return 
 
 .page 
; Pack in the next digit of the exponent. 
; Multiply the old exp by 10 and add in the next digit. 
; (note: does not check for exp overflow) 
 
finedg lda tenexp  ;get exp so far 
 cmp #10   ;will result be >= 100? 
 bcc 5$ 
 lda #100 
 bbs7 expsgn,30$  ;if neg exp, no chk for overr 
 bra overr 
 
5$ asl a   ;max is 120 
 asl a   ;mult by 2 twice 
 clc   ;possible shift out of high 
 adc tenexp  ;like multiplying by five 
 asl a   ;and now by ten 
 clc 
 ldy #0 
 sta syntmp 
 
 lda fin_bank  ;text or string bank? 
 bne 10$ 
 jsr indtxt  ; text 
 bra 20$ 
10$ jsr indin1_ram1  ; string 
 
20$ adc syntmp 
 sec 
 sbc #'0' 
30$ sta tenexp  ;save result 
 bra finec 
 
 .page 
; Get a character from either text or string area, and set the flags 
; in the manner performed by CHRGET. 
 