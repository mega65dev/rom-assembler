FindLine 
 lda txttab ;init pointer to beginning of program 
 ldx txttab+1 
 
FindLink 
 sta lowtr ;current position in program 
 stx lowtr+1 
 ldy #1 
 jsr indlow ;end of program (null link)? 
 beq 3$  ; yes, exit with .c=0 (not found) 
 iny 
 iny 
 jsr indlow ;get line number of this line (high byte first) 
; sta syntmp 
; lda linnum+1 ;is this the line we're looking for? 
; cmp syntmp 
; bcc 4$  ; no- too high, so the line does not exist, exit 
; beq 1$ 
; dey  ; no- too low, so get link to next line 
; bra 2$ 
 cmp linnum+1 ;is this the line we're looking for?   [910925] 
 beq 1$  ; maybe 
 bcs 3$  ; no- too high, so the line does not exist, exit with .c=0 
 dey  ; no- too low, so get link to next line 
 bra 2$ 
 
1$ dey  ; maybe- have to check low byte 
 jsr indlow 
; sta syntmp 
; lda linnum 
; cmp syntmp 
; bcc 4$  ; no- too high, exit 
; beq 4$  ; yes- got it, exit 
 cmp linnum ;is this the line we're looking for?   [910925] 
 beq 4$  ; yes- got it, exit with .c=1 
 bcs 3$  ; no- too high, so the line does not exist, exit with .c=0 
 
2$ dey  ;get link to next line 
 jsr indlow 
 tax 
 dey 
 jsr indlow 
 bra FindLink ; continue looking 
 
 
3$ clc  ;exit, line not found (.c=0) 
4$ rts  ;exit, line found (.c=1) 
 
;.end 
;[[command.line.get]] 
 
 .page 
 .subttl LinGet 
 
; LINGET  Reads a line # from the current txtptr position 
;   and stores it in linnum  (valid range is 0-63999). 
; 
;   On exit txtptr is pointing to the terminating char 
;   which is in .a with condition codes set. 
;   Endchr will be =0 if no digit input, else >0.  Use it 
;   to distinguish between line # 0 & null input. 
 