sprsav jsr savinp        ;evaluate 1st expression 
 bcs 20$    ;skip if source is a string 
 sta forpnt 
 sty forpnt+1      ;save sprite address 
 ldy #62 
 
10$ lda (forpnt),y   ;move sprite def to save area 
 sta savram,y 
 dey 
 bpl 10$ 
 
 iny    ;(0) 
 sty savram+64     ;save sprite column length 
 sty savram+66     ;save sprite row length 
 lda #23 
 sta savram+63 
 lda #20 
 sta savram+65 
 ldx #<savram      ;set ptr to start of sprite def 
 ldy #>savram 
 stx strng1   ;** 
 sty strng1+1   ;** 
 
 lda #67           ;set sprite length including lengths 
 jsr strlit_1   ;**get string space, copy savram to it 
 jsr desc_free   ;**free up temp descriptor 
 
20$ stx savsiz        ;save source length 
 sta savsiz+1 
 sty savsiz+2      ;save source start address 
 
 jsr chkcom        ;check for a comma 
 lda txtptr        ;save basic text pointer 
 sta sprtmp_1 
 lda txtptr+1 
 sta sprtmp_2 
 jsr savinp        ;get next destination parameter 
 bcs savs50        ;skip if string 
 
 sta grapnt 
 sty grapnt+1      ;save sprite address 
 lda savsiz+1 
 sta forpnt        ;get source address 
 lda savsiz+2 
 sta forpnt+1 
 ldy #0 
40$ cpy savsiz        ;test index vs source length 
 beq 45$    ;exit if source depleted 
 lda #forpnt   ;move source byte to sprite 
 jsr lda_far_ram1  ; (from ram bank 1) 
; sta sw_rom_ram0 
 sta (grapnt),y   ; (to sprite area in bank 0)???? 
 iny 
 cpy #63 
 bne 40$ 
45$ rts 
 
 