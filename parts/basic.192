autoboot_filename 
 .byte  'AUTOBOOT.C65*',0 
 
 .page 
 .subttl  SAVE  LOAD  VERIFY  OPEN  CLOSE 
 
erexit tax   ;set termination flags 
 bne error  ;normal error 
 bra break_exit  ;user break 
 
 
 
outch jsr _bsout 
 bcs erexit 
 rts 
 
 
 
inchr jsr _basin 
 bcs erexit 
 rts 
 
 
coout 
; jsr put_io_in_map 
 jsr _chkout 
 jsr dschk  ;see if device # >=4, and clear DS if so 
 bcs erexit  ;take error exit of there was one 
 rts 
 
 
coin 
; jsr put_io_in_map 
 jsr _chkin 
 jsr dschk  ;see if device # >=4, and clear DS if so 
 bcs erexit 
 rts 
 
cgetl 
; jsr put_io_in_map 
 jsr _getin 
 bcs break_exit  ;'stop' key was pressed 
 rts 
 
 .page 
save jsr plsv  ;parse parameters, dschk 
 
 
savenp    ;Save Program (from DSave) 
 ldx text_top  ; ending address 
 ldy text_top+1 
 lda #<txttab  ; pointer to start address 
 
 
savenb    ;Save Binary (from BSave & KEY SAVE) 
; jsr put_io_in_map 
 jsr _savesp  ; save it 
 
; Any changes to the following code must be duplicated at: 
;  bload 
;  load (load_file) 
 
exit_disk_op 
exit_disk_operation 
 php   ;preserve kernel error status (.c) 
 pha   ;preserve kernel error # (.a) 
 jsr print_dos_error ;print DOS error msg if any only in direct mode 
 pla 
 plp 
 bcc 30$   ; branch if no error (rts) 
 bbs7 runmod,20$  ; branch if run mode (erexit) 
 cmp #errfnf  ; is it 'file not found' catch-all? 
 bne 10$   ;  no  (erexit) 
 sta errnum  ;  yes- save error # for 'er' 
 ora #$80  ;   but no errdis 
10$ sec 
20$ bcs erexit  ; exit if kernel problem (rts) 
30$ rts 
 
 .page 