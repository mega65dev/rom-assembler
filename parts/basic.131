Set_TI_String 
 jsr frefac  ;we won't need it 
 sta count  ;save length 
 
 ldy #0   ;our pointer into TI$ assignment 
 sty time  ;default time to zero, in case it's not fully specified 
 sty time+1 
 sty time+2 
 sty time+3 
 
 ldx #3   ;parameter pointer (3=hr,2=min,1=sec,0=tenths) 
10$ jsr GetTimeDigit ;get first digit, convert to BCD 
 bcs 20$   ; colon or eos 
 sta time,x 
 jsr GetTimeDigit ;get second digit, convert to BCD 
 bcs 20$   ; colon or eos 
 
 asl time,x  ;move first digit to msd 
 asl time,x 
 asl time,x 
 asl time,x 
 ora time,x  ;combine with second digit 
 sta time,x  ;now we have a time element of packed BCD 
 
20$ lda time,x 
 cmp MaxTimeValues,x ;  check for parameter too big 
 bcs fcerr  ; hr>23, min>59, sec>59, tenths>9 
 
 dex   ;  check if done 
 bmi 30$   ; yes- all parameters accounted for 
 cpy count 
 bcs 40$   ; yes- end of string 
 
 jsr indin1_ram1  ;  check for optional colon (or period)   [910103] 
 cmp #':' 
 beq 25$ 
 cmp #'.' 
 bne 10$   ; not there 
25$ iny   ; it's there- skip over it 
 
 bra 10$   ;loop until done 
 
 
30$ cpy count  ;done 
 bcc errlen  ; error if string too long 
 
40$ ldz time  ;tenths  0-9 
 lda time+1  ;seconds 0-59 
 ldx time+2  ;minutes 0-59 
 ldy time+3  ;hours  0-23 
 jmp _SetTime  ;Go set time & exit 
 
 .page 
; Get an ASCII digit, make sure it's in range 0-9 or a colon. 
; if no digit to get, default to '0' 
; 
; exit with .c=0 if okay  (.A contains BCD) 
;    .c=1 if colon or eos (.A invalid) 
 