rightd jsr pream 
 pha 
 jsr inddpt 
 sta syntmp 
 pla 
 clc   ;(length des'd)-(length)-1 
 sbc syntmp 
 eor #$ff  ;negate 
 bra rleft 
 
 
; MID$($,#) returns string with chars from # position onward. If # > LEN($) 
; then return null string.  MID($,#,#) returns string with characters from 
; # position for #2 characters.  If #2 goes past end of string return as much 
; as possible. 
 
midd lda #255  ;default 
 sta faclo  ;save for later compare 
 jsr chrgot  ;get current character 
 cmp #')'  ;is it a right paren )? 
 beq 1$   ;no third paren. 
; jsr chkcom  ;must have comma 
; jsr getbyt  ;get the length into "faclo" 
 jsr combyt  ;      [910820] 
 
1$ jsr pream  ;check it out 
 beq fcerr  ;illegal qty error 
 dex   ;compute offset 
 phx 
 phx   ;preserve a while (2 copies) 
 ldx #0 
 jsr inddpt  ;get length of what's left 
 sta syntmp 
 pla 
 clc 
 sbc syntmp 
 bcs rleft2  ;give null string 
 eor #$ff  ;in sub c was 0 so just complement 
 cmp faclo  ;greater than what's desired 
 bcc rleft3  ;no, just copy that much 
 lda faclo  ;get length of what's desired 
 bcs rleft3  ;copy it 
 
 
 
 
; Common routine used by RIGHT$, LEFT$, MID$, for parameter chk and setup. 
 