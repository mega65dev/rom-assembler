errd jsr sign  ;get sign 
 bmi 1$   ; (allow err$(er) when er=-1) 
 jsr conint  ;get integer arg in x 
 dex 
 txa   ; error # (0 to max-1) 
 cmp #last_error_message ; check range 
 bcc 2$   ;  ok 
 ldx #0   ;  too high, return null 
   .byte $2c 
 
1$ ldx #2   ;no error, return "ok"    [910911] 
 lda #<ok_error_message 
 ldy #>ok_error_message 
 sta index2 
 sty index2+1 
 bra 30$   ; pass it 
 
2$ jsr erstup  ;look up the error, set up a pointer to it 
 ldy #$ff  ;determine how long it is 
 ldx #0 
10$ inx   ; count printing characters 
20$ iny 
 lda (index2),y  ; (rom: ind.ok) 
 bmi 30$   ; msb set means last 
 cmp #' ' 
 bcc 20$   ; don't count non-printers 
 bra 10$   ; count all others 
 
30$ txa   ;message length 
 jsr strspa  ;get space 
 tax 
 beq 50$   ; null 
 
; sta sw_rom_ram1  ;set up string bank???? 
 ldx #0 
 ldy #$ff 
40$ iny   ;copy message into memory 
 lda (index2),y  ; (rom: ind.ok) 
 cmp #' ' 
 bcc 40$   ; skip non-printers 
 
 pha 
 and #$7f 
  phy   ;swap x&y 
  phx 
  ply 
 ldx #dsctmp+1 
 jsr sta_far_ram1 ;sta (dsctmp+1),y to RAM1 
  phy   ;swap x&y 
  plx 
  ply 
 inx 
 pla   ;test if msb was set 
 bpl 40$ 
 
50$ bra chrd1  ;pla,pla,jmp putnew 
 
 
;.end 
;[[function.hexstr]] 
 .page 
 .subttl  HEX$ 
 